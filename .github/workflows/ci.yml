name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  app-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
        pip install pytest
    
    - name: Run tests
      run: |
        pytest app/tests/

  web-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'web/package.json'
    
    - name: Install dependencies
      working-directory: ./web
      run: npm ci
    
    - name: Build
      working-directory: ./web
      run: npm run build
    
    - name: Run linting
      working-directory: ./web
      run: npm run lint || true

  docker-build:
    runs-on: ubuntu-latest
    needs: [app-tests, web-build]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and tag Docker images
      run: |
        docker-compose build
      
    # Uncomment and configure the following if you want to push to Docker Hub or another registry
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    # 
    # - name: Push Docker images
    #   run: |
    #     docker-compose push
